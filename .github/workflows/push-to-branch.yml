name: Push to branch

on:
  push:
    branches:
      - "**"
      - "!main"

jobs:
  verify-alpha-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get NPM version
        id: vars
        run: echo "npm_version=$(node -pe 'require("./package.json").version')" >> $GITHUB_OUTPUT
      - name: Display version
        run: echo "${{ steps.vars.outputs.npm_version }}"
      - name: Check if alpha version
        id: checks
        run: |
          set -e
          if [[ "${{ steps.vars.outputs.npm_version }}" =~ ([0-9]+\.[0-9]+\.[0-9]+-alpha\.[0-9]+) ]]; then
            echo "Alpha version found"
            echo "check_type=alpha" >> $GITHUB_OUTPUT
          else
            echo "No alpha version found"
            echo "check_type=release" >> $GITHUB_OUTPUT
          fi
      - name: Display check_type
        run: |
          echo ${{ steps.checks.outputs.check_type }}
    outputs:
      npm_version: ${{ steps.vars.outputs.npm_version }}
      check_type: ${{ steps.checks.outputs.check_type }}

  generate-alpha-release:
    needs: verify-alpha-version
    if: always() && needs.verify-alpha-version.outputs.check_type == 'alpha'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Checkout the current branch
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}
      - name: Extract branch name
        run: echo ${GITHUB_REF##*/}
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.verify-alpha-version.outputs.npm_version }}
          release_name: ${{ needs.verify-alpha-version.outputs.npm_version }}
          draft: true
          prerelease: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./public/fullSchema.json
          asset_name: schema.json
          asset_content_type: application/json
      - name: Publish Alpha Release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
    outputs:
      version: ${{ needs.verify-alpha-version.outputs.npm_version }}

  trigger-sdk-update:
    runs-on: ubuntu-latest
    needs: generate-alpha-release
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Display version
        run: echo ${{ needs.generate-alpha-release.outputs.version }}
      - name: Trigger SDK Update
        run: |
          curl -X POST https://api.github.com/repos/Chillibean/trial-container-api-client-sdk/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.API_SPEC_PAT_TOKEN }} \
          --data '{"event_type": "trigger_workflow", "client_payload": { "version": "${{ needs.generate-alpha-release.outputs.version }}" }}'
      - uses: actions/checkout@v3